# Default values for rl-trading-system.
# This is a YAML-formatted file.
# Declare variables to be substituted into your templates.

# Global configuration
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

# Application configuration
replicaCount: 3

image:
  registry: ghcr.io
  repository: rl-trading/rl-trading-system
  tag: "v1.0.0"
  pullPolicy: IfNotPresent
  pullSecrets: []

nameOverride: ""
fullnameOverride: ""

# Service Account
serviceAccount:
  create: true
  annotations: {}
  name: ""
  automountServiceAccountToken: true

# Pod Security Context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

# Container Security Context
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  capabilities:
    drop:
    - ALL
    add:
    - NET_BIND_SERVICE

# Service configuration
service:
  type: ClusterIP
  ports:
    http: 80
    metrics: 8000
    tensorboard: 6006
  annotations: {}

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: trading.rlsystem.com
      paths:
        - path: /
          pathType: Prefix
          port: http
    - host: api.trading.rlsystem.com
      paths:
        - path: /
          pathType: Prefix
          port: http
    - host: metrics.trading.rlsystem.com
      paths:
        - path: /
          pathType: Prefix
          port: metrics
    - host: tensorboard.trading.rlsystem.com
      paths:
        - path: /
          pathType: Prefix
          port: tensorboard
  tls:
    - secretName: rl-trading-tls
      hosts:
        - trading.rlsystem.com
        - api.trading.rlsystem.com
        - metrics.trading.rlsystem.com
        - tensorboard.trading.rlsystem.com

# Resource limits and requests
resources:
  limits:
    cpu: 2000m
    memory: 4Gi
    ephemeral-storage: 5Gi
  requests:
    cpu: 500m
    memory: 1Gi
    ephemeral-storage: 1Gi

# Horizontal Pod Autoscaler
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 1
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60

# Node selection
nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - rl-trading-system
        topologyKey: kubernetes.io/hostname

# Probes configuration
livenessProbe:
  httpGet:
    path: /api/health
    port: http
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /api/ready
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

startupProbe:
  httpGet:
    path: /api/health
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 30

# Environment variables
env:
  - name: PYTHONPATH
    value: "/app/src"
  - name: CONFIG_PATH
    value: "/app/config/system_config.yaml"
  - name: LOG_LEVEL
    value: "INFO"
  - name: ENVIRONMENT
    value: "production"

# Environment variables from secrets
envFromSecret:
  - name: DB_PASSWORD
    secretName: rl-trading-secrets
    secretKey: db_password
  - name: REDIS_PASSWORD
    secretName: rl-trading-secrets
    secretKey: redis_password
  - name: INFLUXDB_TOKEN
    secretName: rl-trading-secrets
    secretKey: influxdb_token
  - name: API_KEY
    secretName: rl-trading-secrets
    secretKey: api_key
  - name: JWT_SECRET
    secretName: rl-trading-secrets
    secretKey: jwt_secret
  - name: ENCRYPTION_KEY
    secretName: rl-trading-secrets
    secretKey: encryption_key

# Persistent Volume Claims
persistence:
  data:
    enabled: true
    storageClass: "fast-ssd"
    accessMode: ReadWriteOnce
    size: 100Gi
    mountPath: /app/data
  logs:
    enabled: true
    storageClass: "standard"
    accessMode: ReadWriteMany
    size: 50Gi
    mountPath: /app/logs
  checkpoints:
    enabled: true
    storageClass: "fast-ssd"
    accessMode: ReadWriteOnce
    size: 200Gi
    mountPath: /app/checkpoints
  outputs:
    enabled: true
    storageClass: "standard"
    accessMode: ReadWriteMany
    size: 100Gi
    mountPath: /app/outputs

# ConfigMap configuration
configMap:
  create: true
  data:
    system_config.yaml: |
      system:
        name: "RL Trading System"
        version: "1.0.0"
        environment: "production"
        debug: false
        log_level: "INFO"
      
      database:
        host: "postgresql"
        port: 5432
        name: "trading_db"
        username: "trading_user"
        pool_size: 20
        max_overflow: 30
      
      redis:
        host: "redis-master"
        port: 6379
        db: 0
        max_connections: 100
      
      influxdb:
        host: "influxdb"
        port: 8086
        org: "rl-trading"
        bucket: "trading-data"
      
      trading:
        initial_capital: 1000000
        max_position_size: 0.1
        risk_free_rate: 0.02
        transaction_cost: 0.001
      
      rl:
        algorithm: "PPO"
        learning_rate: 0.0003
        batch_size: 256
        buffer_size: 100000
      
      monitoring:
        prometheus:
          enabled: true
          port: 8000
          path: "/metrics"
        health_check:
          enabled: true
          port: 8000
          path: "/health"

# Secrets configuration
secrets:
  create: true
  data:
    db_password: "dHJhZGluZ19wYXNz"  # base64 encoded
    redis_password: "cmVkaXNfcGFzcw=="
    influxdb_token: "aW5mbHV4X3Rva2VuXzEyMw=="
    api_key: "YXBpX2tleV9zZWNyZXRfMTIz"
    jwt_secret: "and0X3NlY3JldF9rZXlfNDU2"
    encryption_key: "ZW5jcnlwdGlvbl9rZXlfNzg5"

# RBAC configuration
rbac:
  create: true
  rules:
    - apiGroups: [""]
      resources: ["pods", "services", "configmaps", "secrets"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["apps"]
      resources: ["deployments", "replicasets"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["networking.k8s.io"]
      resources: ["ingresses"]
      verbs: ["get", "list", "watch"]

# Network Policy
networkPolicy:
  enabled: true
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: ingress-nginx
      ports:
      - protocol: TCP
        port: 5000
    - from:
      - namespaceSelector:
          matchLabels:
            name: monitoring
      ports:
      - protocol: TCP
        port: 8000
  egress:
    - to: []
      ports:
      - protocol: UDP
        port: 53
      - protocol: TCP
        port: 53
    - to:
      - podSelector:
          matchLabels:
            app.kubernetes.io/name: postgresql
      ports:
      - protocol: TCP
        port: 5432
    - to:
      - podSelector:
          matchLabels:
            app.kubernetes.io/name: redis
      ports:
      - protocol: TCP
        port: 6379
    - to:
      - podSelector:
          matchLabels:
            app.kubernetes.io/name: influxdb
      ports:
      - protocol: TCP
        port: 8086

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 2
  # maxUnavailable: 1

# Monitoring configuration
monitoring:
  serviceMonitor:
    enabled: true
    namespace: monitoring
    interval: 30s
    scrapeTimeout: 10s
    path: /metrics
    labels: {}
    annotations: {}

# Dependencies configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: "postgres_password"
    username: "trading_user"
    password: "trading_pass"
    database: "trading_db"
  primary:
    persistence:
      enabled: true
      size: 50Gi
      storageClass: "fast-ssd"
    resources:
      requests:
        memory: 512Mi
        cpu: 250m
      limits:
        memory: 2Gi
        cpu: 1000m

redis:
  enabled: true
  auth:
    enabled: true
    password: "redis_pass"
  master:
    persistence:
      enabled: true
      size: 20Gi
      storageClass: "fast-ssd"
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      limits:
        memory: 1Gi
        cpu: 500m

influxdb:
  enabled: true
  auth:
    admin:
      username: "admin"
      password: "influx_password"
      token: "influx_token_123"
    user:
      username: "trading_user"
      password: "trading_pass"
  persistence:
    enabled: true
    size: 100Gi
    storageClass: "fast-ssd"
  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 2Gi
      cpu: 1000m

# Environment-specific overrides
environments:
  dev:
    replicaCount: 1
    resources:
      requests:
        cpu: 250m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 2Gi
    autoscaling:
      enabled: false
    persistence:
      data:
        size: 10Gi
      logs:
        size: 5Gi
      checkpoints:
        size: 20Gi
      outputs:
        size: 10Gi
    ingress:
      hosts:
        - host: trading-dev.rlsystem.com
          paths:
            - path: /
              pathType: Prefix
              port: http
      tls:
        - secretName: rl-trading-dev-tls
          hosts:
            - trading-dev.rlsystem.com
  
  staging:
    replicaCount: 2
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 1500m
        memory: 3Gi
    autoscaling:
      minReplicas: 2
      maxReplicas: 5
    ingress:
      hosts:
        - host: trading-staging.rlsystem.com
          paths:
            - path: /
              pathType: Prefix
              port: http
      tls:
        - secretName: rl-trading-staging-tls
          hosts:
            - trading-staging.rlsystem.com
  
  prod:
    replicaCount: 5
    resources:
      requests:
        cpu: 1000m
        memory: 2Gi
      limits:
        cpu: 4000m
        memory: 8Gi
    autoscaling:
      minReplicas: 5
      maxReplicas: 20
    persistence:
      data:
        size: 500Gi
      logs:
        size: 200Gi
      checkpoints:
        size: 1Ti
      outputs:
        size: 500Gi